#!/bin/bash

red='\e[0;31m'
RED='\e[1;31m'
blue='\e[0;34m'
BLUE='\e[1;34m'
cyan='\e[0;36m'
CYAN='\e[1;36m'
green='\e[0;32m'
GREEN='\e[1;32m'
yellow='\e[0;33m'
YELLOW='\e[1;33m'
NC='\e[0m'

MYSQL_CONFIG_PATH={{mysql_config_path}}
MYSQL_COMMAND=${1}

if [ "$#" -eq 2 ] ; then

  MYSQL_NAME=${2}
  MYSQL_CONFIG="${MYSQL_CONFIG_PATH}/${MYSQL_NAME}.cnf"

  if [ -f ${MYSQL_CONFIG} ] ; then 

    case "${MYSQL_COMMAND}" in
      'start'|'stop'|'restart') 
        /var/lib/mysql-${MYSQL_NAME}/bin/${MYSQL_COMMAND}.sh
        exit $?
        ;;
      *) 
        echo "Unknown command '$MYSQL_COMMAND'"
        exit 1
        ;;
    esac
  fi

elif [ "$#" -eq 1 ] ; then

  case "${MYSQL_COMMAND}" in
    'start'|'stop'|'restart') 
      RETURN=0
      for INSTANCE in $(find ${MYSQL_CONFIG_PATH} -name "*.cnf" | sed -r 's/^.*\/([^/]*)(.cnf)$/\1/' | sort); do
        /var/lib/mysql-${INSTANCE}/bin/${MYSQL_COMMAND}.sh
        if [ $? -ne 0 ]; then
          RETURN=$?
        fi
      done
      exit ${RETURN}
      ;;
    *) 
      MYSQL_NAME=${MYSQL_COMMAND}
      MYSQL_CONFIG="${MYSQL_CONFIG_PATH}/${MYSQL_NAME}.cnf"

      if [ -f ${MYSQL_CONFIG} ] ; then 
        echo "Running mysql-client with config-file '${MYSQL_CONFIG}'"
        echo
        mysql --defaults-file=${MYSQL_CONFIG} -t
      else 
        echo "Wrong mysql-multi name: '${MYSQL_NAME}'!"
        exit 1
      fi
      ;;
  esac

else

  for INSTANCE in $(find ${MYSQL_CONFIG_PATH} -name "*.cnf" | sed -r 's/^.*\/([^/]*)(.cnf)$/\1/' | sort); do

    MYSQL_CONFIG="${MYSQL_CONFIG_PATH}/${INSTANCE}.cnf"
    CONFIG=`my_print_defaults --defaults-file=${MYSQL_CONFIG} mysqld`
    # MYSQL_SOCKET=`echo "$CONFIG" | grep "socket=" | cut -f2 -d=`
    # MYSQL_PID=`echo "$CONFIG" | grep "pid-file=" | cut -f2 -d=`
    MYSQL_DATA_DIR=`echo "$CONFIG" | grep "datadir=" | cut -f2 -d=`
    MYSQL_BINLOG_DIR=`echo "$CONFIG" | grep -E "log-bin=" | sed -re 's/(^.*=|[^\/]+$)//g'`
    MYSQL_ADDRESS=`echo "$CONFIG" | grep -E "bind-address=" | cut -f2 -d=`
    MYSQL_PORT=`echo "$CONFIG" | grep -E -- "--port=" | cut -f2 -d=`
    MYSQL_POOL_SIZE=`echo "$CONFIG" | grep -E "innodb_buffer_pool_size" | cut -f2 -d=`

    SIZE_DATA_DIR=`[ -d "$MYSQL_DATA_DIR" ] && du -ms "$MYSQL_DATA_DIR" | cut -f1 || echo "--"`
    SIZE_BINLOG_DIR=`[ -d "$MYSQL_BINLOG_DIR" ] && du -ms "$MYSQL_BINLOG_DIR" | cut -f1 || echo "--"`

    # RUNNING=`[ -S $MYSQL_SOCKET ] && echo 1 || echo 0`
    RUNNING=`mysqladmin --defaults-file=${MYSQL_CONFIG} ping 2>/dev/null | grep alive | wc -l`

    # check screen jobs
    SCREEN_JOBS=`screen -ls | grep -P "mysql(dump)?-${INSTANCE}\s" | head -1 | sed -r 's/^\s[0-9]+\.(.+)\s(\(.+?\)).+$/\1 \2/'`

    # Clear ansble colors:
    # ansible vertis_prod_backup -m shell -a mysql-multi 
    printf "$NC"
    printf "%-30s %s:%d (data: %6s mb, binlog: %6s mb, innodb: %4s) " \
      ${INSTANCE} $MYSQL_ADDRESS $MYSQL_PORT $SIZE_DATA_DIR $SIZE_BINLOG_DIR $MYSQL_POOL_SIZE

    if [ $RUNNING -eq 1 ] ; then 
      SKIP_NETWORK=`mysql --defaults-file=${MYSQL_CONFIG} -Ne 'SELECT @@global.skip_networking'`
      READ_ONLY=`mysql --defaults-file=${MYSQL_CONFIG} -Ne 'SELECT @@global.read_only'`
      GTID_MODE=`mysql --defaults-file=${MYSQL_CONFIG} -Ne 'SELECT @@global.gtid_mode' | grep -c "ON"`
      SLAVE_STATUS=`mysql --defaults-file=${MYSQL_CONFIG} -e 'SHOW SLAVE STATUS\G'`
      LOCK_STATUS=`mysql --defaults-file=${MYSQL_CONFIG} -e 'show create user haproxy\G' 2>/dev/null | grep 'ACCOUNT LOCK' | wc -l`
      SLAVE_LAG=`echo "$SLAVE_STATUS" | grep 'Seconds_Behind_Master' | awk '{print $2}'`
      REPLICATION=`echo "$SLAVE_STATUS" | grep 'Slave_*' | egrep -q 'No|Connecting' && echo 0 || echo 1`

      # check gtid consistency
      # local master?
      if [ ${GTID_MODE} -eq 1 ] ; then
        EXECUTED_MASTER=`timeout 3 mysql --defaults-file=${MYSQL_CONFIG} --defaults-group-suffix=_replication -sNEe "select @@global.gtid_executed" 2>/dev/null | tail -n+2`
        EXECUTED_SLAVE=`mysql --defaults-file=${MYSQL_CONFIG} -sNEe "select @@global.gtid_executed" 2>/dev/null | tail -n+2`
        # EXECUTED_DIFF_NUM >= 2 - ok
        EXECUTED_DIFF_NUM=`printf "${EXECUTED_MASTER}\n${EXECUTED_SLAVE}" | sort | uniq -c | awk '{ if ($1 < 2) {print $0 } }' | wc -l`
      fi

      if [ $LOCK_STATUS -eq 1 ] ; then
        printf "$yellow%s$NC " "Locked "
      else
        printf "$green%s$NC " "Running"
      fi

      [ $READ_ONLY -eq 1 ] && printf "$green%s$NC " "RO" || printf "$yellow%s$NC " "RW"

      [ $SKIP_NETWORK -eq 1 ] && printf "$YELLOW%s$NC " "No network" || printf "$green%s$NC " "Network"

      if [ ! -z "$SLAVE_STATUS" ] ; then 
        if [ "$REPLICATION" -eq 1 ] ; then 

          printf "${green}Slave${NC} %sLag: ${SLAVE_LAG} " \
            `[ "$SLAVE_LAG" -le 60 ] && printf "$green" || ([ "$SLAVE_LAG" -gt 600 ] && printf "$red" || printf "$yellow")`
            
          [ ${GTID_MODE} -eq 1 ] && printf "%s" \
            `[ "${EXECUTED_DIFF_NUM}" -gt 2 ] && printf "${red}gtid" || printf "${green}gtid"`

          printf "$NC "

        else 
          printf "$red%s$NC " "Slave broken"
        fi
      fi
      if [ "$SCREEN_JOBS" ] ; then 
        printf "$yellow%s$NC " "$SCREEN_JOBS"
      fi

    else
      if [ -z "$SCREEN_JOBS" ] ; then 
        printf "$red%s$NC " "Stopped"
      else 
        printf "$YELLOW%s: $yellow%s$NC " "Stopped" "$SCREEN_JOBS"
      fi
    fi
    echo

  done

  echo "
  Usage: 
    $0                - show instances status
    $0 [mysql_name]   - run mysql-client for instance 'mysql_name'
    $0 (start|stop|restart) [mysql_name] - manage mysql instances
  Run mysql commands for instance:
    mysql --defaults-file=/etc/mysql-multi/<MYSQL-NAME>.cnf -e '<COMMAND>'

  "

fi

